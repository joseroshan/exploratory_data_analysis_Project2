setwd("C:/Users/Sujjan/practise_assignment")
setwd("C:/Users/Sujjan/practice_assignment")
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
dim(andy)
str(andy)
summary(andy)
names(andy)
length(andy)
names(andy)
andy[1,weight]
andy[1,"weight""]
andy[1,"weight"]
andy[1,"Weight"]
andy[30, weight]
andy[30,"Weight"]
andy["Day"==30, "weight"]
andy[andy$Day==30, "weight"]
andy[which(andy$Day==30), "weight"]
andy[andy$Day==30, "Weight"]
andy["Day"==30, "Weight"]
andy[which(andy$Day == 30), "Weight"]
andy[which(andy[,"Day"] == 30), "Weight"]
andy[,"Day"] == 30
and[andy$Day==30, "Weight"]
andy[andy$Day==30, "Weight"]
andy[which(andy$Day==30), "Weight"]
andy[(andy[,"Day""]==30), "Weight"]
andy[(andy[,"Day"]==30), "Weight"]
subset(andy$Day==30, and$Weight)
subset(andy$Day==30, andy$Weight)
subset(andy$Weight, andy$Day==30)
andy[1,start] <- andy[1,"Weight"]
andy_start <- andy[1,"Weight"]
andy_end[1, andy[30,"Weight"]]
andy_end<- andy[1, andy[30,"Weight"]
andy_end<- andy[30,"Weight"]
andy_end<- andy[length(andy$Weight),"Weight"]
andy_loss <- andy_start- andy_end
andy_loss
list.files()
?list.files()
files <- list.files("diet_data")
files
files[1]
files[3:5]
files_full <- list.files("diet_data, full.names=TRUE")
files_full
files_full <- list.files("diet_data", full.names=TRUE)
head(read.csv(files_full[3]))
andy_david <- rbind(andy, read.csv(files_full[2]))
pwd
getwd)
getwd()
source('C:/Users/Sujjan/practice_assignment/gcd.R')
coserv <- read.csv("/data/coserv.csv")
coserv <- read.csv("./data/coserv.csv")
unique(coserv$ACR)
unique(coserv$AGS)
coserv[which(coserv$ACR==3, coserv$AGS==6),coserv$RT]
head(coserv[which(coserv$ACR==3, coserv$AGS==6),coserv$RT], n=3)
head(coserv[which(coserv$ACR==3, coserv$AGS==6),coserv$RT], n=3)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source(gcd.R)
getwd()
source('~/.active-rstudio-document')
source("gcd.R)
source("gcd.R")
View(csub)
which(csub)
which(coserv[csub])
csub <- which(coserv$ACR==3, coserv$AGS==6)
csub
source('~/.active-rstudio-document')
source('C:/Users/Sujjan/practice_assignment/gcd.R')
source('C:/Users/Sujjan/practice_assignment/gcd.R')
source("C:/Users/Sujjan/practice_assignment/gcd.R")
which(agricultureLogical)[1:3]
source('~/.active-rstudio-document')
install.packages("jpeg")
source('~/.active-rstudio-document')
source('C:/Users/Sujjan/practice_assignment/gcd2.R')
jeff
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
names(jeff)
str(jeff)
jeff
source('C:/Users/Sujjan/practice_assignment/gcd2.R')
source('C:/Users/Sujjan/practice_assignment/gcd2.R')
quantile(jeff,probs=c(0.30,.80))
jeff <- readJPEG("./data/jeff.jpg", native=TRUE)
quantile(jeff,probs=c(0.30,.80))
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl,destfile="./data/gdp.csv")
gdp <- read.csv
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl, "./data/country.csv")
country <- read.csv("./data/country.csv)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl,destfile="./data/gdp.csv")
gdp <- read.csv
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl, "./data/country.csv")
country <- read.csv("./data/country.csv")
str(gdp)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl,destfile="./data/gdp.csv")
gdp <- read.csv("./data/gdp.csv")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl, "./data/country.csv")
country <- read.csv("./data/country.csv")
str(gdp)
head(gdp)
gdp
source('C:/Users/Sujjan/practice_assignment/gcd3.R')
head(gdp)
source('C:/Users/Sujjan/practice_assignment/gcd3.R')
gdp <- read.csv("./data/gdp.csv", header=TRUE, skip=6)
country <- read.csv("./data/country.csv", header=TRUE)
head(gdp)
gdp <- read.csv("./data/gdp.csv", header=FALSE, skip=6)
gdp\
gdp
head(gdp)
gdp <- read.csv("./data/gdp.csv", header=FALSE, skip=4)
head(gdp\)
head(gdp)
gdp <- read.csv("./data/gdp.csv", header=FALSE, skip=5. header=TRUE)
gdp <- read.csv("./data/gdp.csv", header=FALSE, skip=5, header=TRUE)
gdp <- read.csv("./data/gdp.csv", header=TRUE, skip=5, header=TRUE)
gdp <- read.csv("./data/gdp.csv", header=TRUE, skip=5)
head(gdp)
dtGDP <- data.table(read.csv("./data/gdp.csv", skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP","Long.Name", "gdp"))
dtGDP <- data.table(read.csv("./data/gdp.csv", skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setNames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
rm(gdp)
dtGDP <- data.table(read.csv("./data/gdp.csv", skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setNames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
dtGDP <- data.table(read.csv("./data/gdp.csv", skip = 4, nrows = 215))
install.packages("data.table")
dtGDP <- data.table(read.csv("./data/gdp.csv", skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setNames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
library(data.table)
dtGDP <- data.table(read.csv("./data/gdp.csv", skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setNames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
dtGDP <- data.table(read.csv("./data/gdp.csv", skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setNames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setNames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setNames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
dtGDP
dtGDP <- data.table(read.csv("./data/gdp.csv", skip = 4, nrows = 215))
dtGDP
dtGDP <- dtGDP[X != ""]
dtGDP
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
dtGDP
setNames(dtGDP, old=c("X", "X.1", "X.3", "X.4"), new=c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
setnames(dtGDP, old=c("X", "X.1", "X.3", "X.4"), new=c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
merge(dtGDP,country,by=c("CountryCode"), all=TRUE)
dt <- merge(dtGDP,country,by=c("CountryCode"), all=TRUE)
str(dt)
dt[order(ranlkingGDP, descending=TRUE), list(CountryCode,Long.Name.x)][13]
dt[order(rankingGDP, descending=TRUE), list(CountryCode,Long.Name.x)][13]
dt[order(rankingGDP, descending=TRUE), list(CountryCode,Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y,
rankingGDP, gdp)][13]
dt[order(rankingGDP, decreasing=TRUE), list(CountryCode,Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y,
rankingGDP, gdp)][13]
sum(!is.na(unique(dt$rankingGDP)))
str(dt)
dt[, mean(rankingGDP, na.rm = TRUE), by = Income.Group]
xt <- xtabs(Freq ~ rankingGDP)
xt <- xtabs(Freq ~ rankingGDP, data=dt)
xt <- xtabs(rankingGDP, data=dt)
xt <- xtabs(quantile(dt$rankingGDP, probs=c(0.2,0.4,0.6,0.8,1))~Income.Group, data=dt)
xt <- xtabs(quantile(dt$rankingGDP, na.rm=TRUE) ~Income.Group, data=dt)
xt <- xtabs(quantile(dt$rankingGDP, na.rm=TRUE) ~ CountryCode+Income.Group, data=dt)
breaks <- quantile(dt$rankingGDP, probs = seq(0, 1, 0.2), na.rm = TRUE)
dt$quantileGDP <- cut(dt$rankingGDP, breaks = breaks)
dt[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
View(coserv)
source('C:/Users/Sujjan/practice_assignment/gcdas2.R')
unzip("./data/harus.zip")
head(read.table("./data/UCI HAR dataset/train/X_train.txt"))
head(read.table("./data/UCI HAR dataset/train/X_train.txt",nrow=10))
head(read.table("./data/UCI HAR dataset/train/X_train.txt",nrow=10))
head(read.table("./data/UCI HAR dataset/train/X_train.txt",row=10))
head(read.table("./data/UCI HAR dataset/train/X_train.txt",n=10))
head(read.table("./data/UCI HAR dataset/train/X_train.txt"))
read.table("./data/UCI HAR dataset/train/X_train.txt",nrow=10))
read.table("./data/UCI HAR dataset/train/X_train.txt",nrow=10)
x_train <- read.table("./data/UCI HAR dataset/train/X_train.txt")
View(x_train)
str(x_train)
setnames(x_train, new=c(read.table("./data/UCI HAR dataset/train/Y_train.txt")))
setnames(x_train, c(read.table("./data/UCI HAR dataset/train/Y_train.txt")))
y_train <- read.table("./data/UCI HAR dataset/train/Y_train.txt"
setnames(x_train, c(y_train))
y_train <- read.table("./data/UCI HAR dataset/train/Y_train.txt")
setnames(x_train, c(y_train))
setnames(x_train, c(as.character(y_train))
)
y_train
View(y_train)
train <- read.table("./data/UCI HAR dataset/train/X_train.txt")
test <- read.table("./data/UCI HAR dataset/test/X_test.txt")
dataset <- rbind(train,test)
activity_labels <- read.table("./data/harus/UCI HAR dataset/activity_labels.txt")
View(activity_labels)
source('~/.active-rstudio-document')
setwd("C:/Users/Sujjan/practice_assignment/gettingandcleaningdata")
source('C:/Users/Sujjan/practice_assignment/gettingandcleaningdata/run_analysis.R')
installed.packages()
View(data)
View(train)
View(test)
View(features)
View(activity_labels)
features <- getTable("features.txt")
View(features)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
data_path <- "UCI HAR Dataset"
result_folder <- "results"
##Install required packacets
# looks if package is installed
if(!is.element("plyr", installed.packages()[,1])){
print("Installing packages")
install.packages("plyr")
}
library(plyr)
## Create data and folders
# verifies the data zip file has been downloaded
if(!file.exists(file)){
##Downloads the data file
print("downloading Data")
download.file(url,file, mode = "wb")
}
if(!file.exists(result_folder)){
print("Creating result folder")
dir.create(result_folder)
}
file <- "data.zip"
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
data_path <- "UCI HAR Dataset"
result_folder <- "results"
##Install required packacets
# looks if package is installed
if(!is.element("plyr", installed.packages()[,1])){
print("Installing packages")
install.packages("plyr")
}
library(plyr)
## Create data and folders
# verifies the data zip file has been downloaded
if(!file.exists(file)){
##Downloads the data file
print("downloading Data")
download.file(url,file, mode = "wb")
}
if(!file.exists(result_folder)){
print("Creating result folder")
dir.create(result_folder)
}
file <- "data.zip"
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
data_path <- "UCI HAR Dataset"
result_folder <- "results"
##Install required packacets
# looks if package is installed
if(!is.element("plyr", installed.packages()[,1])){
print("Installing packages")
install.packages("plyr")
}
library(plyr)
## Create data and folders
# verifies the data zip file has been downloaded
if(!file.exists(file)){
##Downloads the data file
print("downloading Data")
download.file(url,file, mode = "wb")
}
if(!file.exists(result_folder)){
print("Creating result folder")
dir.create(result_folder)
}
features <- getTable("features.txt")
getTable <- function (filename,cols = NULL){
print(paste("Getting table:", filename))
f <- unz(file, paste(data_path,filename,sep="/"))
data <- data.frame()
if(is.null(cols)){
data <- read.table(f,sep="",stringsAsFactors=F)
} else {
data <- read.table(f,sep="",stringsAsFactors=F, col.names= cols)
}
data
}
##Reads and creates a complete data set
getData <- function(type, features){
print(paste("Getting data", type))
subject_data <- getTable(paste(type,"/","subject_",type,".txt",sep=""),"id")
y_data <- getTable(paste(type,"/","y_",type,".txt",sep=""),"activity")
x_data <- getTable(paste(type,"/","X_",type,".txt",sep=""),features$V2)
return (cbind(subject_data,y_data,x_data))
}
##saves the data into the result folder
saveResult <- function (data,name){
print(paste("Saving data", name))
file <- paste(result_folder, "/", name,".csv" ,sep="")
write.csv(data,file)
}
features <- getTable("features.txt")
View(features)
debugSource('C:/Users/Sujjan/practice_assignment/gettingandcleaningdata/run_analysis.R')
debugSource('C:/Users/Sujjan/practice_assignment/gettingandcleaningdata/run_analysis.R')
debugSource('C:/Users/Sujjan/practice_assignment/gettingandcleaningdata/run_analysis.R')
browser()
debugSource('C:/Users/Sujjan/practice_assignment/gettingandcleaningdata/run_analysis.R')
debugSource('C:/Users/Sujjan/practice_assignment/gettingandcleaningdata/run_analysis.R')
debugSource('C:/Users/Sujjan/practice_assignment/gettingandcleaningdata/run_analysis.R')
debugSource('C:/Users/Sujjan/practice_assignment/gettingandcleaningdata/run_analysis.R')
exit
debugSource('C:/Users/Sujjan/practice_assignment/gettingandcleaningdata/run_analysis.R')
source('C:/Users/Sujjan/practice_assignment/gettingandcleaningdata/run_analysis.R')
View(dataset1)
source('C:/Users/Sujjan/practice_assignment/gettingandcleaningdata/run_analysis.R')
setwd("C:/Users/Sujjan")
setwd("C:/Users/Sujjan/exploratory_data_analysis_Project2")
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot1.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot1.R')
NEI <- readRDS("./data/exdata-data-NEI_data/summarySCC_PM25.rds")
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot1.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot1.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot1.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot2.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot3.R')
install.packages("ggplot")
install.packages("ggplot2")
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot3.R')
install.packages("ggplot")
install.packages("colorspace")
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot3.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot3.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot3.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot3.R')
install.packages("digest")
install.packages("digest")
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot3.R')
install.packages("ggplot2")
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot3.R')
install.packages("ggplot2", repos = "http://cran.r-project.org")
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot3.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot2.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot3.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot3.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot3.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot4.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot4.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot4.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot4.R')
library(plyr)
library(plyr)
library(ggplot2)
# Read the data file
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("data/exdata_data_NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("data/exdata_data_NEI_data/Source_Classification_Code.rds")
# First extract all source codes corresponding to coal combustion
# The EI.Sector field looks like the most direct way to determine this
CoalCombustionSCC <- subset(SCC, EI.Sector %in% c("Fuel Comb - Comm/Institutional - Coal",
"Fuel Comb - Electric Generation - Coal",
"Fuel Comb - Industrial Boilers, ICEs - Coal"))
# This may omit some. For example, see 242
# Compare to Short.Name matching both Comb and Coal
CoalCombustionSCC1 <- subset(SCC, grepl("Comb", Short.Name) & grepl("Coal", Short.Name))
nrow(CoalCombustionSCC)
nrow(CoalCombustionSCC1)
d1 <- setdiff(CoalCombustionSCC, CoalCombustionSCC1)
d2 <- setdiff(CoalCombustionSCC1, CoalCombustionSCC)
length(d1)
length(d2)
# Above does not work correctly
d3 <- setdiff(CoalCombustionSCC$SCC, CoalCombustionSCC1$SCC)
d4 <- setdiff(CoalCombustionSCC1$SCC, CoalCombustionSCC$SCC)
length(d3)
length(d4)
# Given these differences I believe the best approach is to union the two sets
CoalCombustionSCCCodes <- union(CoalCombustionSCC$SCC, CoalCombustionSCC1$SCC)
length(CoalCombustionSCCCodes)
CoalCombustion <- subset(NEI, SCC %in% CoalCombustionSCCCodes)
coalCombustionPM25ByYear <- ddply(CoalCombustion, .(year, type), function(x) sum(x$Emissions))
colnames(coalCombustionPM25ByYear)[3] <- "Emissions"
png("plot4.png")
qplot(year, Emissions, data=coalCombustionPM25ByYear, color=type, geom="line") +
stat_summary(fun.y = "sum", fun.ymin = "sum", fun.ymax = "sum",
color = "black", aes(shape="total"), geom="line") +
geom_line(aes(size="total", shape = NA)) +
ggtitle(expression("Coal Combustion" ~ PM[2.5] ~ "Emissions by Source Type and Year")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tons)"))
dev.off()
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot5.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot6.R')
source('C:/Users/Sujjan/exploratory_data_analysis_Project2/plot3.R')
